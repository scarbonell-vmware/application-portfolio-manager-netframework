{"version":3,"sources":["serviceWorker.ts","Components/AboutDialog.js","Components/Header.js","Components/Navigation.js","Components/ApplicationForm.js","Components/PropTable.js","Components/Demo.js","Components/Tab.js","Components/Tabs.js","Components/LoadTester.js","Components/ApplicationList.js","MainPage.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","AboutDialog","_ref","onClose","version","React","createElement","Dialog","open","DialogTitle","Grid","container","justify","alignItems","Typography","variant","name","mode","IconButton","onClick","CloseIcon","DialogContent","DialogContentText","style","fontSize","Header","navigationCallBack","instanceIndex","setInstanceIndex","useState","displayAboutDialog","setDisplayAboutDialog","className","id","onAboutDialogOpen","onAboutDialogClose","Navigation","href","target","value","ApplicationForm","title","application","onSubmit","setOpen","setName","description","setDescription","identifier","setIdentifier","businessUnit","setBusinessUnit","businessOwner","setBusinessOwner","organization","setOrganization","aria-labelledby","TextField","autoFocus","margin","label","type","fullWidth","onChange","event","DialogActions","Button","color","updatedApplication","undefined","useStyles","makeStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","PropTable","props","propList","key","hasOwnProperty","push","JSON","stringify","map","prop","index","Demo","activeProfile","setActiveProfile","envProps","setEnvProps","appProps","setAppProps","useEffect","async","fetch","method","headers","then","response","text","data","fetchActiveProfile","json","console","log","VCAP_APPLICATION","parse","VCAP_SERVICES","fetchEnvProps","fetchAppProps","Fragment","Tab","Component","constructor","arguments","this","render","activeTab","Tabs","super","onClickTabItem","tab","setState","state","children","child","about","LoadTester","memoryUsage","setMemoryUsage","memoryAllocated","setMemoryAllocated","memoryTarget","setMemoryTarget","cpuUsage","setCpuUsage","cpuTestStatus","setCpuTestStatus","memoryTestStatus","setMemoryTestStatus","updateUsage","fetchMemoryUsage","fetchCPUUsage","fetchMemoryAllocated","intervalId","setInterval","clearInterval","startCPUTest","body","startMemoryTest","stopAllTests","Styles","styled","div","_templateObject","_taggedTemplateLiteral","EmptyFilter","_ref2","column","filterValue","preFilteredRows","setFilter","DefaultColumnFilter","_ref3","length","e","placeholder","Table","_ref4","columns","filterTypes","useMemo","customText","rows","filter","row","rowValue","values","String","toLowerCase","includes","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","visibleColumns","preGlobalFilteredRows","setGlobalFilter","useTable","useFilters","firstPageRows","slice","Object","assign","headerGroup","getHeaderGroupProps","getHeaderProps","canFilter","i","getRowProps","cells","cell","getCellProps","ApplicationList","applications","setApplications","currentApplication","setCurrentApplication","displayCreateDialog","setDisplayCreateDialog","displayEditDialog","setDisplayEditDialog","closeCreateDialog","closeEditDialog","defaultColumns","accessor","r","Cell","_ref5","concat","fetchApplications","deleteApp","MainPage","navigationState","updateNavigationState","App","setNavigationState","setVersion","fetchVersion","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a123b8a.chunk.js","sourcesContent":["/*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst AboutDialog = ({ onClose, version }) => {\n\n\n    return (\n\n        <Dialog open={true} >\n            <DialogTitle>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"div\">About Application Portfolio Manager {version.name} {version.mode =='lite' ? \"(Lite)\" : \"\"}</Typography>\n                    <IconButton onClick={() => onClose(false)}>\n                        <CloseIcon />\n                    </IconButton>\n                </Grid></DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                <Typography variant=\"div\" style={{fontSize: '15px'}}>Application Portfolio Manager is a proprietary tool for use only by authorized personnel.</Typography>\n                <br></br>\n<Typography variant=\"div\" style={{fontSize: '15px'}}>\nCopying, reverse engineering, and/or distribution is strictly forbidden.</Typography>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n\n    );\n};\n\nexport default AboutDialog;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport AboutDialog from './AboutDialog';\nconst Header = ( {navigationCallBack, version} ) => {\n    const [instanceIndex, setInstanceIndex] = useState(\"...\")\n    const [displayAboutDialog, setDisplayAboutDialog] = useState(false)\n   \n    const onAboutDialogClose = () => {\n      setDisplayAboutDialog(false)\n   }\n\n   const onAboutDialogOpen = () => {\n       setDisplayAboutDialog(true)\n    }\n\n  \n    return (\n        <header className='header'>\n            <div className=\"flex-container\">\n                <div className='logo'></div>\n                <div className='title'>Application Portfolio Manager <span id=\"version\">{version.name} </span><span id=\"stack\">[.NET FRAMEWORK 4.8]</span></div>\n                <div className='instance-index'>{'TAS Instance: '+instanceIndex}</div>\n                <div className='about-bt' onClick={onAboutDialogOpen}></div>\n            </div>\n            {displayAboutDialog && <AboutDialog version={version} onClose={onAboutDialogClose} ></AboutDialog>}\n        </header>\n    );\n};\nexport default Header;","import React from 'react';\nimport { useState, useEffect } from 'react';\nconst Navigation = ({}) => {\n\n\n\n    return (\n        <nav className=\"navigation\">\n            <ul>\n               \n                <li>\n                    <a className='api-doc-off' href=\"/swagger-ui/index.html\" target='_blank' value=\"Filter\"/>\n                </li>\n                <li>\n                    <a className='api-graphql-doc-off' href=\"/graphiql\" target='_blank' value=\"Filter\"/>\n                </li>\n                <li>\n                    <a className='plugin-off' value=\"Filter\"/>\n                </li>\n                <li>\n                    <a className='grouptag-off' value=\"Filter\"/>\n                </li>\n                <li>\n                   <a className='info-off'  value=\"Filter\"/>\n                </li>\n               \n            </ul>\n        </nav>\n    );\n};\nexport default Navigation;","\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst ApplicationForm = ({ title, application, onSubmit, onClose }) => {\n    const [open, setOpen] = React.useState(false);\n  \n    const [name, setName] = React.useState(application ? application.name : \"\");\n    const [description, setDescription] = React.useState(application ? application.description : \"\");\n    const [identifier, setIdentifier] = React.useState(application ? application.identifier : \"\");\n    const [businessUnit, setBusinessUnit] = React.useState(application ? application.businessUnit : \"\");\n    const [businessOwner, setBusinessOwner] = React.useState(application ? application.businessOwner : \"\");\n    const [organization, setOrganization] = React.useState(application ? application.organization : \"\");\n\n    function gatherData () {\n       var updatedApplication = {}\n       updatedApplication.id = application ? application.id : undefined;\n       updatedApplication.name = name;\n       updatedApplication.description = description\n       updatedApplication.identifier = identifier\n       updatedApplication.businessOwner = businessOwner\n       updatedApplication.businessUnit = businessUnit\n       updatedApplication.organization = organization\n       onSubmit(updatedApplication)\n    }\n\n    function handleChangeName(event) {\n        setName(event.target.value)\n    }\n\n    function handleChangeDescription(event) {\n        setDescription(event.target.value)\n    }\n\n    function handleChangeIdentifier(event) {\n        setIdentifier(event.target.value)\n    }\n\n    function handleChangeOrganization(event) {\n        setOrganization(event.target.value)\n    }\n\n    function handleChangeBusinessUnit(event) {\n        setBusinessUnit(event.target.value)\n    }\n\n    function handleChangeBusinessOwner(event) {\n        setBusinessOwner(event.target.value)\n    }\n\n    return (\n\n        <div>\n  \n        <Dialog open={true} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n           \n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Name\"\n              type=\"name\"\n              fullWidth\n              value={name}\n              onChange={handleChangeName}\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"identifier\"\n              label=\"Identifier\"\n              type=\"indentifier\"\n              fullWidth\n              value={identifier}\n              onChange={handleChangeIdentifier}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Description\"\n              type=\"description\"\n              fullWidth\n              value={description}\n              onChange={handleChangeDescription}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"businessUnit\"\n              label=\"Business Unit\"\n              type=\"businessUnit\"\n              fullWidth\n              value={businessUnit}\n              onChange={handleChangeBusinessUnit}\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"businessOwner\"\n              label=\"Business Owner\"\n              type=\"businessOwner\"\n              fullWidth\n              value={businessOwner}\n              onChange={handleChangeBusinessOwner}\n            />\n             <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"organization\"\n              label=\"Organization\"\n              type=\"organization\"\n              fullWidth\n              value={organization}\n              onChange={handleChangeOrganization}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={gatherData} color=\"primary\">\n              {!application ? 'Create' : 'Save'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n    );\n};\n\nexport default ApplicationForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 400,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\nconst PropTable = ({ props }) => {\n\n    const classes = useStyles();\n    var propList = []\n\n    for (var key in props) {\n        if (props.hasOwnProperty(key)) {\n            propList.push({ name: key, value: (((typeof props[key]) == 'string') ? props[key] : JSON.stringify(props[key])) })\n        }\n    }\n\n    return (\n\n        <div>\n\n            <table>\n                <th>Name</th><th>Value</th>\n                {propList.map((prop, index) =>\n                    <tr key={index}>\n                        <td>\n                            <Typography style={{ 'fontSize': '12px', 'color': 'black', 'fontWeight': 'bold' }}>{prop.name}</Typography>\n                        </td>\n                        <td>\n                            <Typography style={{ 'fontSize': '12px', 'color': 'black' }}>{prop.value}</Typography>\n                        </td>\n                    </tr>\n                )}\n            </table>\n\n\n\n        </div>\n\n    );\n};\n\nexport default PropTable;","\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport PropTable from './PropTable';\nconst Demo = () => {\n    const [activeProfile, setActiveProfile] = React.useState();\n    const [envProps, setEnvProps] = React.useState();\n    const [appProps, setAppProps] = React.useState();\n\n    const fetchActiveProfile = async () => {\n        await fetch('/api/activeProfiles', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setActiveProfile(data)\n          });\n      }\n\n      const fetchEnvProps = async () => {\n        await fetch('/api/envProps', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (response) {\n            return response.json();\n          })\n          .then(function (data) {\n              console.log(data.VCAP_APPLICATION)\n            if (data.VCAP_APPLICATION) data.VCAP_APPLICATION = JSON.parse(data.VCAP_APPLICATION)\n            if (data.VCAP_SERVICES) data.VCAP_SERVICES = JSON.parse(data.VCAP_SERVICES)\n            console.log(data)\n            setEnvProps(data)\n          });\n      }\n\n      const fetchAppProps = async () => {\n        await fetch('/api/appProps', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (response) {\n            return response.json();\n          })\n          .then(function (data) {\n            setAppProps(data)\n          });\n      }\n    \n      useEffect(() => {\n        fetchActiveProfile()\n        fetchEnvProps()\n        fetchAppProps()\n      }, [])\n\n    return (\n\n      <>\n      <div className=\"section-title\">Active Profile: {activeProfile}</div>\n      <div className=\"section-title\">Application Properties:</div>\n      {appProps && <PropTable props={appProps}></PropTable>}\n      <div className=\"section-title\">Environment Properties:</div>\n      {envProps && <PropTable props={envProps}></PropTable>}\n      <div className=\"section-title\">TAS Application Properties:</div>\n      {envProps && envProps.VCAP_APPLICATION && <PropTable props={envProps.VCAP_APPLICATION}></PropTable>}\n      \n      <div className=\"section-title\">TAS Service Properties:</div>\n      {envProps && envProps.VCAP_SERVICES && <PropTable props={envProps.VCAP_SERVICES}></PropTable>}\n\n      </>\n\n    );\n};\n\nexport default Demo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n    static propTypes = {\n      activeTab: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      onClick: PropTypes.func.isRequired,\n    };\n  \n    onClick = () => {\n      const { title, onClick } = this.props;\n      onClick(title);\n    }\n  \n    render() {\n      const {\n        onClick,\n        props: {\n          activeTab,\n          title,\n        },\n      } = this;\n  \n      let className = 'tab-list-item';\n  \n      if (activeTab === title) {\n        className += ' tab-list-active';\n      }\n  \n      return (\n        <li\n          className={className}\n          onClick={onClick}\n        >\n          {title}\n        </li>\n      );\n    }\n  }\n  \n  export default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\nimport './Tabs.css'\n\nclass Tabs extends Component {\n    static propTypes = {\n      children: PropTypes.instanceOf(Array).isRequired,\n    }\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        activeTab: this.props.children[0].props.title\n      };\n    }\n  \n    onClickTabItem = (tab) => {\n      this.setState({ activeTab: tab });\n    }\n    render() {\n        const {\n          onClickTabItem,\n          props: {\n            children,\n          },\n          state: {\n            activeTab,\n          }\n        } = this;\n    \n        return (\n          <div className=\"tabs\">\n            <ol className=\"tab-list\">\n              {children.map((child) => {\n                const { title, about } = child.props;\n                return (\n                  <Tab\n                    activeTab={activeTab}\n                    key={title}\n                    title={title}\n                    about={about}\n                    onClick={onClickTabItem}\n                  />\n                );\n              })}\n            </ol>\n            <div className=\"tab-content\">\n            {children.map((child) => {\n                if (child.props.title !== activeTab) return undefined;\n                return <div className='tab-description'>{child.props.about}</div>\n              })}\n              {children.map((child) => {\n                if (child.props.title !== activeTab) return undefined;\n                return child.props.children;\n              })}\n            </div>\n          </div>\n        );\n      }\n    }\n\nexport default Tabs;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useState, useEffect } from 'react';\nconst LoadTester = ({ }) => {\n\n    const [memoryUsage, setMemoryUsage] = React.useState();\n    const [memoryAllocated, setMemoryAllocated] = React.useState();\n    const [memoryTarget, setMemoryTarget] = React.useState();\n    const [cpuUsage, setCpuUsage] = React.useState();\n    const [cpuTestStatus, setCpuTestStatus] = React.useState();\n    const [memoryTestStatus, setMemoryTestStatus] = React.useState();\n\n    function handleChangeTarget(event) {\n        setMemoryTarget(event.target.value)\n    }\n\n\n    function updateUsage () {\n        fetchMemoryUsage()\n        fetchCPUUsage()\n    }\n    const fetchMemoryUsage = async () => {\n        await fetch('/api/memoryUsed', {\n            method: 'GET'\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setMemoryUsage(data)\n          });\n      }\n\n      const fetchMemoryAllocated = async () => {\n        await fetch('/api/memoryAllocated', {\n            method: 'GET'\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setMemoryAllocated(data)\n          });\n      }\n\n      const fetchCPUUsage = async () => {\n        await fetch('/api/cpuUsage', {\n            method: 'GET'\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setCpuUsage(data)\n          });\n      }\n\n      const startCPUTest = async () => {\n        await fetch('/api/increaseCPU', {\n            method: 'POST'\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setCpuTestStatus(data)\n          });\n      }\n\n      const startMemoryTest = async () => {\n        await fetch('/api/increaseMemory', {\n            method: 'POST',\n            body: memoryTarget,\n            headers: {\n                'Accept': 'plain/text',\n                'Content-Type' : 'text/plain;charset=UTF-8'\n              }\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setMemoryTestStatus(data)\n          });\n      }\n\n      const stopAllTests = async () => {\n        await fetch('/api/stopLoadTests', {\n            method: 'POST'\n          }).then(function (response) {\n            return response.text();\n          })\n          .then(function (data) {\n            setMemoryTestStatus(data)\n            setCpuTestStatus(data)\n          });\n      }\n   \n       // First load we get the templates available\n    useEffect(() => {\n        fetchMemoryAllocated()\n        updateUsage()\n        const intervalId = setInterval(updateUsage, 2000);\n    \n        return () => {\n          if (intervalId) {\n            clearInterval(intervalId)\n          }\n        }\n      }, [])\n\n    return (\n\n      <div>\n          <div className='usage'>\n          <div>Memory Allocated: <span style={{'fontWeight': 'bold'}}>{memoryAllocated}</span></div>\n          <div>Memory Usage: <span style={{'fontWeight': 'bold'}}>{memoryUsage}</span></div>\n          <div>CPU Usage: <span style={{'fontWeight': 'bold'}}>{cpuUsage}</span></div>\n          </div>\n       <div>\n       <div className='test'>\n           <Button style={{'fontSize': '13px'}} onClick={() => startCPUTest()} variant=\"outlined\">Start CPU Test</Button>\n           <div>{cpuTestStatus}</div>\n           </div>\n           <div className='test'>\n \n           <div>Memory Target (M): {memoryTarget}</div>\n           <TextField style={{height: '70px',fontSize: \"12px\"}} variant=\"outlined\" onChange={handleChangeTarget} value={memoryTarget} id=\"memoryTarget\"  />\n           <Button style={{'fontSize': '13px'}} onClick={() => startMemoryTest()} variant=\"outlined\">Start Memory Test</Button>\n           <div>{memoryTestStatus}</div>\n           </div>\n           <div className='test'>\n           <Button style={{'fontSize': '13px'}} onClick={() => stopAllTests()} variant=\"outlined\">Stop Tests</Button>\n \n           </div>\n       </div>\n      </div>\n\n    );\n};\n\nexport default LoadTester;","import React from 'react'\nimport styled from 'styled-components'\nimport { useTable, useFilters, useAsyncDebounce } from 'react-table'\nimport { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from \"@material-ui/core/Grid\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport ApplicationForm from './ApplicationForm';\nimport Demo from './Demo';\nimport Tabs from './Tabs';\nimport LoadTester from './LoadTester';\n\nconst Styles = styled.div`\n  padding: 1rem;\n  label {\n      font-weight: bold;\n      border-bottom: 1px solid black;\n  }  \n`\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n  const [value, setValue] = React.useState(globalFilter)\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined)\n  }, 200)\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={value || \"\"}\n        onChange={e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\nfunction EmptyFilter({\n  column: { filterValue = [], preFilteredRows, setFilter, id },\n}) {\n  return (<div></div>)\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter }\n}) {\n  const count = preFilteredRows.length\n   \n  return (\n    <input\n      value={filterValue || ''}\n      onChange={e => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={``}\n    />\n  )\n}\n\n// Our table component\nfunction Table({ columns, data }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      // Or, override the default text filter to use\n      // \"startWith\"\n      customText: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue.name)\n              .toLowerCase()\n              .includes(String(filterValue).toLowerCase())\n            : true\n        })\n      }\n    }),\n    []\n  )\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n    },\n    useFilters\n  )\n\n  // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  const firstPageRows = rows.slice(0, 1000)\n\n  return (\n    <>\n      <table className='styled-table' {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                  {/* Render the columns filter UI */}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nfunction ApplicationList() {\n\n  const [applications, setApplications] = React.useState([]);\n  const [currentApplication, setCurrentApplication] = React.useState();\n  const [displayCreateDialog, setDisplayCreateDialog] = React.useState(false);\n  const [displayEditDialog, setDisplayEditDialog] = React.useState(false);\n\n  function openCreateDialog () {\n    setDisplayCreateDialog(true)\n  }\n\n  function closeCreateDialog () {\n    setDisplayCreateDialog(false)\n  }\n\n  function openEditDialog (application) {\n    setCurrentApplication(application)\n    setDisplayEditDialog(true)\n  }\n\n  function closeEditDialog () {\n    setDisplayEditDialog(false)\n  }\n\n  const deleteApp = async (id) => {\n    await fetch(`/api/Application/${id}`, {\n      method: 'DELETE'\n    })\n    .then(function (data) {\n      fetchApplications()\n    });\n  }\n\n  const createApp = async (application) => {\n    await fetch('/api/Application', {\n      method: 'POST',\n      body: JSON.stringify(application),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(function (data) {\n      fetchApplications()\n      closeCreateDialog()\n    });\n  }\n\n  const updateApp = async (application) => {\n    await fetch('/api/Application', {\n      method: 'PUT',\n      body: JSON.stringify(application),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(function (data) {\n      fetchApplications()\n      closeEditDialog()\n    });\n  }\n\n  const defaultColumns = [{\n    Header: 'Applications',\n    columns: [\n      {\n        Header: 'Identifier',\n        accessor: \"identifier\"\n      },\n      {\n        Header: 'Name',\n        accessor: \"name\"\n      },\n      {\n        Header: 'Description',\n        accessor: \"description\"\n      },\n      {\n        Header: 'Organization',\n        accessor: \"organization\"\n      },\n      {\n        Header: 'Business Unit',\n        accessor: \"businessUnit\"\n      },\n      {\n        Header: 'Business Owner',\n        accessor: \"businessOwner\"\n      },\n      {\n        Header: 'Actions',\n        accessor: r => r,\n        Cell: displayActions,\n        Filter: EmptyFilter\n      }\n    ],\n  }]\n\n  function displayActions({ value }) {\n    return <div className='action-items'>\n      <div onClick={() => openEditDialog(value)} title=\"Edit\" className='edit-on'></div>\n      <div onClick={() => deleteApp(value.id)} title=\"Delete\" className='delete-on'></div>\n      \n      </div>\n      \n  }\n\n  const columns = React.useMemo(\n    () => defaultColumns,\n    []\n  )\n\n  const data = React.useMemo(() => {\n    return applications\n  })\n\nconst fetchApplications = async () => {\n    await fetch('/api/Application', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        setApplications(data)\n      });\n  }\n\n  useEffect(() => {\n    fetchApplications()\n  }, [])\n\n  return (\n    <Styles>\n      <Tabs>\n        <div title='Manage Applications' >\n            <div className=\"main-table\">\n                <Button style={{'fontSize': '13px'}} onClick={() => openCreateDialog()} variant=\"outlined\">Create Application</Button>\n                <Table columns={columns} data={data} />\n            </div>\n       </div>\n\n       <div title='Manage Organizations' ></div>\n       <div title='Manage Users' ></div>\n       <div title='Settings' ></div>\n       <div title='Properties' >\n         <Demo></Demo>\n       </div>\n       <div title='Load Testing' >\n         <LoadTester></LoadTester>\n       </div>\n    </Tabs>\n    {displayCreateDialog && <Dialog open={true} onClose={closeCreateDialog}>\n        <DialogTitle>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"div\">Create new Application</Typography>\n            <IconButton onClick={() => closeCreateDialog()}>\n              <CloseIcon />\n            </IconButton>\n          </Grid></DialogTitle>\n\n          <ApplicationForm onClose={closeCreateDialog} onSubmit={createApp} title={'Create Application'}></ApplicationForm>\n     \n      </Dialog>}\n      {displayEditDialog && <Dialog open={true} onClose={closeEditDialog}>\n        <DialogTitle>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"div\">Update Application {currentApplication.name}</Typography>\n            <IconButton onClick={() => closeCreateDialog()}>\n              <CloseIcon />\n            </IconButton>\n          </Grid></DialogTitle>\n\n          <ApplicationForm onClose={closeEditDialog} application={currentApplication} onSubmit={updateApp} title={'Udpate Application'+currentApplication.name}></ApplicationForm>\n     \n      </Dialog>}\n    </Styles>\n  )\n}\n\nexport default ApplicationList\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport ApplicationList from './Components/ApplicationList';\n\nconst MainPage: React.FC<{ navigationState: any, updateNavigationState: any }> = ({ navigationState, updateNavigationState }) => {\n\n\n  // First load we get the templates available\n  useEffect(() => {\n  }, [])\n\n  return (\n    <React.Fragment>\n       <ApplicationList></ApplicationList>\n    </React.Fragment>\n  );\n};\nexport default MainPage;","\nimport React from 'react';\nimport Header from './Components/Header';\nimport Navigation from './Components/Navigation';\nimport { useEffect } from 'react';\nimport MainPage from \"./MainPage\";\nimport { useState } from 'react';\nconst App: React.FC<{ }> = () => {\n\n  const [navigationState, setNavigationState] = useState<any>({})\n  const [version, setVersion] = useState<any>()\n  function updateNavigationState (state: any) {\n    if (state) {\n       setNavigationState(state)\n    }\n  }\n\n  const fetchVersion = async () => {\n    await fetch('/api/version', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        setVersion(data)\n      });\n  }\n  useEffect(() => {\n    fetchVersion()\n  }, [])\n  //--------------------------------------------------------\n  return (\n    <React.Fragment>\n    {version && <Header version = {version} navigationCallBack={updateNavigationState}></Header>}\n    <div className='layout'>\n      <Navigation />\n      <MainPage navigationState={navigationState} updateNavigationState={updateNavigationState}/>\n    </div>\n    </React.Fragment>\n  );\n}\n        \nexport default App;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}